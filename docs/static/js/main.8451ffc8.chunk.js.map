{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Hooks/useFetchGifs.js","Components/GifGridItem.js","Components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","GifGridItem","className","src","alt","GifGrid","gif","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"yLAqCeA,EAlCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAOlB,SACI,uBACCO,KAAK,OACLC,MAAOT,EACPU,SArBiB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCUhBG,EAjBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACNC,EADM,0FACoFC,UAAUH,GAD9F,sBAEWI,MAAMF,GAFjB,cAENG,EAFM,gBAGWA,EAASC,OAHpB,uBAGJC,EAHI,EAGJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT9B,kBAcLM,GAdK,4CAAH,sDCqBEO,EAlBM,SAACf,GAElB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OARAC,qBAAW,WACPpB,EAAQC,GACPoB,MAAK,SAAAZ,GAAI,OAAIU,EAAS,CACnBX,KAAMC,EACNQ,SAAS,SAEd,CAAChB,IAEGiB,GCPII,EATK,SAAC,GAAuB,EAArBV,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC9B,OACI,sBAAKoB,UAAU,wCAAf,UACI,6BAAMV,IACN,qBAAKW,IAAMrB,EAAMsB,IAAMZ,QCuBpBa,EAzBC,SAAC,GAAgB,IAAfzB,EAAc,EAAdA,SAEd,EAAgCe,EAAaf,GAA/BQ,EAAd,EAAQD,KAAYS,EAApB,EAAoBA,QAEpB,OACI,qCACI,6BAAMhB,IAEJgB,GAAW,mBAAGM,UAAU,mCAAb,2BAEb,qBAAKA,UAAU,YAAf,SAGQd,EAAKC,KAAI,SAACiB,GAAD,OACT,cAAC,EAAD,eAEQA,GADEA,EAAIf,aCcnBgB,EA1BM,WAEjB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACI,qCACI,6FACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGI,6BAEQS,EAAWe,KAAI,SAAAT,GACX,OAAO,cAAC,EAAD,CAEHA,SAAWA,GADLA,Y,cCjBtC4B,EAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8451ffc8.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { useState } from 'react'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2)\r\n        {\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n        \r\n\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n             type=\"text\"\r\n             value={inputValue}\r\n             onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory\r\n","const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=855eWO7VlRC3nK7Micp83GJrREq8SmzR&q=${ encodeURI(category) }&limit=10`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n        \r\n    });\r\n\r\n    return gifs;\r\n};\r\n\r\nexport default getGifs;","import { useEffect, useState } from \"react\";\r\nimport getGifs from '../Helpers/getGifs';\r\n\r\nconst useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n        .then(gifs => setState({\r\n            data: gifs,\r\n            loading: false\r\n        }));\r\n    }, [category]);\r\n\r\n    return state;\r\n};\r\n\r\nexport default useFetchGifs;","import React from 'react'\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate_animated animate__fadeIn\">\r\n            <h3>{ title }</h3>\r\n            <img src={ url } alt={ title }/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react';\r\nimport useFetchGifs from '../Hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const { data: gifs, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h2>{ category }</h2>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\"> Cargando... </p> }\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    gifs.map((gif) => \r\n                    <GifGridItem \r\n                        key={ gif.id }\r\n                        {...gif}\r\n                    />)\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","// import PropTypes from 'prop-types';\r\n// import {useState} from 'react';\r\n\r\nimport { useState } from \"react\";\r\nimport AddCategory from \"./Components/AddCategory\";\r\nimport GifGrid from \"./Components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Samurai X']);\r\n\r\n    return (\r\n        <>\r\n            <h1>El mejor buscador de gifs de Paraná Entre Ríos carajo</h1>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            {\r\n                <ol>\r\n                    {\r\n                        categories.map(category => {\r\n                            return <GifGrid\r\n                                key={ category }\r\n                                category={ category }\r\n                            />\r\n                        })\r\n                    }\r\n                </ol>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import './index.css';\nimport GifExpertApp from './GifExpertApp';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}